{"version":3,"sources":["images/1.PNG","images/2.PNG","images/3.PNG","images/4.PNG","images/5.PNG","images/6.PNG","images/7.PNG","images/8.PNG","images/9.PNG","images/10.PNG","images/11.PNG","compoments/Card_98.js","compoments/CardList_98.js","compoments/demo_98.js","compoments/SearchBox_98.js","containers/App_98.js","serviceWorker.js","index.js"],"names":["module","exports","Card","id","name","img","className","src","CardList","demo","map","user","i","key","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","SearchBox","searchfield","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","target","value","state","filteredDemos","this","filter","toLowerCase","includes","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,4MCY5BC,G,MATF,SAAC,GAAsB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IACxB,OACE,yBAAKC,UAAU,mDACb,4BAAKF,GACL,yBAAKG,IAAKF,OCMDG,EAVE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,6BACGA,EAAKC,KAAI,SAACC,EAAMC,GACf,OAAO,kBAAC,EAAD,CAAMC,IAAKD,EAAGT,GAAIQ,EAAKR,GAAIC,KAAMO,EAAKP,KAAMC,IAAKM,EAAKN,W,sLCMxDI,EAAO,CAClB,CACEN,GAAI,EACJC,KAAM,cACNC,IAAKS,KAEP,CACEX,GAAI,EACJC,KAAM,UACNC,IAAKU,KAEP,CACEZ,GAAI,EACJC,KAAM,WACNC,IAAKW,KAEP,CACEb,GAAI,EACJC,KAAM,UACNC,IAAKY,KAEP,CACEd,GAAI,EACJC,KAAM,cACNC,IAAKa,KAEP,CACEf,GAAI,EACJC,KAAM,eACNC,IAAKc,KAEP,CACEhB,GAAI,EACJC,KAAM,YACNC,IAAKe,KAEP,CACEjB,GAAI,EACJC,KAAM,gCACNC,IAAKgB,KAEP,CACElB,GAAI,EACJC,KAAM,iBACNC,IAAKiB,KAEP,CACEnB,GAAI,GACJC,KAAM,eACNC,IAAKkB,KAEP,CACEpB,GAAI,GACJC,KAAM,cACNC,IAAKmB,MCpDMC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,yBAAKrB,UAAU,OACb,2BACEA,UAAU,wBACVsB,KAAK,SACLC,YAAY,eACZC,SAAUH,MC2BHI,G,wDA7Bb,aAAe,IAAD,8BACZ,gBAOFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAER,YAAaO,EAAME,OAAOC,SAP1C,EAAKC,MAAQ,CACX5B,KAAMA,EACNiB,YAAa,IAJH,E,qDAYJ,IAAD,OACDY,EAAgBC,KAAKF,MAAM5B,KAAK+B,QAAO,SAAC/B,GAC5C,OAAOA,EAAKL,KACTqC,cACAC,SAAS,EAAKL,MAAMX,YAAYe,kBAGrC,OACE,yBAAKnC,UAAU,MACb,yCACA,kBAAC,EAAD,CAAWqB,aAAcY,KAAKP,iBAC9B,kBAAC,EAAD,CAAUvB,KAAM6B,IAHlB,S,GArBYK,cCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,6BACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.08bc8ef2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.c678f745.PNG\";","module.exports = __webpack_public_path__ + \"static/media/2.64ce4056.PNG\";","module.exports = __webpack_public_path__ + \"static/media/3.02875109.PNG\";","module.exports = __webpack_public_path__ + \"static/media/4.cc80aa15.PNG\";","module.exports = __webpack_public_path__ + \"static/media/5.460729be.PNG\";","module.exports = __webpack_public_path__ + \"static/media/6.6f54386b.PNG\";","module.exports = __webpack_public_path__ + \"static/media/7.7276cad0.PNG\";","module.exports = __webpack_public_path__ + \"static/media/8.9e814dfc.PNG\";","module.exports = __webpack_public_path__ + \"static/media/9.73b8f78a.PNG\";","module.exports = __webpack_public_path__ + \"static/media/10.a3142928.PNG\";","module.exports = __webpack_public_path__ + \"static/media/11.828483a3.PNG\";","import React from \"react\";\r\nimport \"./Card_98.css\";\r\n\r\nconst Card = ({ id, name, img }) => {\r\n  return (\r\n    <div className=\"bg-light-blue dib br3 pa4 ma2 grow bw2 shadow-5\">\r\n      <h2>{name}</h2>\r\n      <img src={img} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card_98\";\r\n\r\nconst CardList = ({ demo }) => {\r\n  return (\r\n    <div>\r\n      {demo.map((user, i) => {\r\n        return <Card key={i} id={user.id} name={user.name} img={user.img} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","// robots.js\r\nimport w1 from \"../images/1.PNG\";\r\nimport w2 from \"../images/2.PNG\";\r\nimport w3 from \"../images/3.PNG\";\r\nimport w4 from \"../images/4.PNG\";\r\nimport w5 from \"../images/5.PNG\";\r\nimport w6 from \"../images/6.PNG\";\r\nimport w7 from \"../images/7.PNG\";\r\nimport w8 from \"../images/8.PNG\";\r\nimport w9 from \"../images/9.PNG\";\r\nimport w10 from \"../images/10.PNG\";\r\nimport w11 from \"../images/11.PNG\";\r\n\r\nexport const demo = [\r\n  {\r\n    id: 1,\r\n    name: \"Introdution\",\r\n    img: w1,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Pokemon\",\r\n    img: w2,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \" My Blog\",\r\n    img: w3,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Gallery\",\r\n    img: w4,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Tic Tac Toe\",\r\n    img: w5,\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Glozzom demo\",\r\n    img: w6,\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Protfolio\",\r\n    img: w7,\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"The Unconventional Calculator\",\r\n    img: w8,\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"Monster Killer\",\r\n    img: w9,\r\n  },\r\n  {\r\n    id: 10,\r\n    name: \"Music Player\",\r\n    img: w10,\r\n  },\r\n  {\r\n    id: 11,\r\n    name: \"Robofriends\",\r\n    img: w11,\r\n  },\r\n];\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return (\r\n    <div className=\"pa3\">\r\n      <input\r\n        className=\"pa3 ba b--red bg-pink\"\r\n        type=\"search\"\r\n        placeholder=\"search demos\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"../compoments/CardList_98\";\r\nimport { demo } from \"../compoments/demo_98\";\r\nimport SearchBox from \"../compoments/SearchBox_98\";\r\nimport \"./App_98.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      demo: demo,\r\n      searchfield: \"\",\r\n    };\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const filteredDemos = this.state.demo.filter((demo) => {\r\n      return demo.name\r\n        .toLowerCase()\r\n        .includes(this.state.searchfield.toLowerCase());\r\n    });\r\n\r\n    return (\r\n      <div className=\"tc\">\r\n        <h1>ClassDemo</h1>\r\n        <SearchBox searchChange={this.onSearchChange} />\r\n        <CardList demo={filteredDemos} />;\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App_98\";\n//import CardList from \"./CardList\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\n//import { demo } from \"./demo\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}